#!/usr/bin/env php
<?php
// Script should not be called from the Web
if (php_sapi_name() != 'cli') {
    die('Nope');
}

date_default_timezone_set('Europe/Paris');

require_once __DIR__ .'/libs/poparser.php';
require_once __DIR__ . '/inc/init.php';

/* init l10n class to create the globals needed */
$initl10n = new l10n_moz();

/* user provided variables */
$filename = isset($argv[1]) ? secureText($argv[1])  : 'main.lang'; // which file are we comparing? Set a default
$website  = isset($argv[2]) ? secureText($argv[2])  : '0'; // which website are we looking at? Default to www.mozilla.org
$locale   = isset($argv[3]) ? secureText($argv[3])  : 'all';  // which locale are we analysing? No default

if ($filename == 'all') {
    $files = array_keys($langfiles_subsets[$sites[$website][0]]);
} else {
    $files = array($filename);
}

/* loop generating the files */
foreach ($files as $filename) {

    // load the English source for the file

    $reflang  = $sites[$website][5];
    $source   = $sites[$website][1] . $sites[$website][2] . $reflang . '/' . $filename;
    logger("Reference English file: $source");

    if ($locale != 'all' && in_array($locale, $langfiles_subsets[$sites[$website][0]][$filename])) {
        $locales = array($locale);
    } elseif ($locale != 'all' && !in_array($locale, $langfiles_subsets[$sites[$website][0]][$filename])) {
        // locale is not supported for the lang file, skip
        continue;
    } elseif ($locale == 'locamotion') {
        $locales = array_intersect($locamotion_locales, $langfiles_subsets[$sites[$website][0]][$filename]);
    } else {
        $locales = $langfiles_subsets[$sites[$website][0]][$filename];
    }

    getEnglishSource($reflang, $website, $filename, 1);

    // When we analyse multiple files we don't want to stop for lack of source
    if (count($files) == 1) {
        if ($GLOBALS['__english_moz'] == null) {
            logger("$source does not exist", 'quit');
        }
    }

    if (isset($langfiles_subsets[$sites[$website][0]][$filename])) {
        $result = '';
        foreach ($locales as $lang) {

            $source = $sites[$website][1] . $sites[$website][2] . $lang . '/' . $filename;

            // delete translations from memory before processing locale
            if (isset($GLOBALS['__l10n_moz'])) {
                unset($GLOBALS['__l10n_moz']);
            }

            /* here we load preexisting lang files */
            l10n_moz::load($source);

            /* is the lang file using Windows or Unix EOL? */
            if (file_exists($source)) {
                $eol = file($source);
                $eol = isWindowsEOL($eol[0]) ? "\r\n" : "\n";
            } else {
                $eol = "\n";
            }

            $activeStatus = (boolean) $GLOBALS['__l10n_moz']['activated'];

            /* import data from locamotion */
            if ($locale == 'locamotion') {
                $import = scrapLocamotion($lang, $filename, $source);
                if (!$import) {
                    continue;
                }
            }
            /* incorporate strings from other lang files */
            //~ l10n_moz::load($sites[$website][1] . $sites[$website][2] . $_lang . '/survey1.lang');
            //~ l10n_moz::load($sites[$website][1] . $sites[$website][2] . $_lang . '/survey2.lang');
            //~ l10n_moz::load($sites[$website][1] . $sites[$website][2] . $_lang . '/survey3.lang');
            //~ l10n_moz::load($sites[$website][1] . $sites[$website][2] . $_lang . '/snippets.lang');
            //~ l10n_moz::load($sites[$website][1] . $sites[$website][2] . $_lang . '/mozorg/about.lang');

            $GLOBALS['__l10n_moz']['activated'] = (boolean) $activeStatus;

            $exceptions = array(
                // new string => older equivalent string
                'Different by design'           => 'Different by Design',
                'Proudly<br />non-profit'       => 'Proudly <span>non-profit</span>',
                'Innovating<br />for you'       => 'Innovating <span>for you</span>',
                'Fast, flexible,<br />secure'   => 'Fast, flexible, <span>secure</span>',
            );

            $exceptions = array(
                //~ 'Mozilla and partners prepare to launch first Firefox OS smartphones' => 'Mozilla and partners prepare to launch first Firefox OS smartsphones'
            );

            $content = buildFile($eol, $exceptions);
            $path    = $source;
            //~ print_r($content);die; //debug

            fileForceContents($path, $content);

            $result .= $lang  . ': ' . $filename . $eol;

        }
        // delete source English strings from memory before loading next file
        if (isset($GLOBALS['__english_moz'])) {
            unset($GLOBALS['__english_moz']);
        }
        logger($result);
    }
}
